[gd_scene load_steps=3 format=3 uid="uid://cyl1d6reu3mk4"]

[ext_resource type="Texture2D" uid="uid://dhuukef617r6s" path="res://Icons/Folder.svg" id="1_34bwh"]

[sub_resource type="GDScript" id="GDScript_af0jw"]
script/source = "extends HBoxContainer

enum Mode { SELECT_FOLDER, OPEN_FILE, SAVE_FILE, SELECT_WHATEVER, FAKE_SELECT_FOLDER }
enum Scope { GLOBAL, PROJECT }
enum MissingMode { IGNORE, WARN, ERROR }

@onready var line_edit: LineEdit = $LineEdit
@onready var file_dialog: FileDialog = $FileDialog

@export var mode: Mode
@export var scope: Scope
@export var missing_mode: MissingMode
@export var filters: PackedStringArray

signal path_changed

var text: String:
	set(t):
		line_edit.text = t
		validate()
	get:
		return line_edit.text

func _ready() -> void:
	line_edit.text_submitted.connect(path_changed.emit.unbind(1))
	match mode:
		Mode.SELECT_FOLDER, Mode.FAKE_SELECT_FOLDER:
			file_dialog.file_mode = FileDialog.FILE_MODE_OPEN_DIR
		Mode.OPEN_FILE:
			file_dialog.file_mode = FileDialog.FILE_MODE_OPEN_FILE
		Mode.SAVE_FILE:
			file_dialog.file_mode = FileDialog.FILE_MODE_SAVE_FILE
		Mode.SELECT_WHATEVER:
			file_dialog.file_mode = FileDialog.FILE_MODE_OPEN_ANY
	
	if scope == Scope.PROJECT:
		file_dialog.current_dir = Data.project_path
	
	file_dialog.filters = filters
	validate()

func open_dialog() -> void:
	file_dialog.current_dir = text.get_base_dir()
	file_dialog.popup_centered_ratio(0.5)

func _path_selected(path: String) -> void:
	if scope == Scope.PROJECT:
		text = path.trim_prefix(Data.project_path)
		text = text.trim_prefix(\"/\")
	else:
		text = path
	
	path_changed.emit(\"\")

func validate():
	if missing_mode == MissingMode.IGNORE:
		return
	
	var path := line_edit.text
	if scope == Scope.PROJECT:
		path = Data.project_path.path_join(path)
	
	var valid: bool
	if not line_edit.text.is_empty():
		match mode:
			Mode.OPEN_FILE, Mode.SAVE_FILE, Mode.FAKE_SELECT_FOLDER:
				valid = FileAccess.file_exists(path)
			Mode.SELECT_FOLDER:
				valid = DirAccess.dir_exists_absolute(path)
			Mode.SELECT_WHATEVER:
				valid = FileAccess.file_exists(path) or DirAccess.dir_exists_absolute(path)
	
	if valid:
		modulate = Color.WHITE
		return
	
	match missing_mode:
		MissingMode.WARN:
			modulate = Color.YELLOW
		MissingMode.ERROR:
			modulate = Color.RED
"

[node name="DirectorySelector" type="HBoxContainer"]
offset_right = 256.0
offset_bottom = 31.0
script = SubResource("GDScript_af0jw")
missing_mode = 1

[node name="LineEdit" type="LineEdit" parent="."]
layout_mode = 2
size_flags_horizontal = 3

[node name="Button" type="Button" parent="."]
layout_mode = 2
icon = ExtResource("1_34bwh")

[node name="FileDialog" type="FileDialog" parent="."]
access = 2

[connection signal="text_changed" from="LineEdit" to="." method="validate" unbinds=1]
[connection signal="pressed" from="Button" to="." method="open_dialog"]
[connection signal="dir_selected" from="FileDialog" to="." method="_path_selected"]
[connection signal="file_selected" from="FileDialog" to="." method="_path_selected"]
